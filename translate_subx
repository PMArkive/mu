#!/bin/sh
# Translate SubX files to a bootable disk image.
#
# A couple of gotchas:
# * Many phases here have no error-checking. Perhaps I should use a
#   version of translate_subx_debug for baremetal.
# * Don't pass in numbered .subx files without translated .mu files. Our test
#   harness is in test.mu, and only Mu programs can run tests in baremetal.
#
# The top level is in general not as rigorous about avoiding dependency cycles
# as the lower-level tools in linux/

set -e

cat $*          |linux/braces                                   > a.braces

cat a.braces    |linux/calls                                    > a.calls

cat a.calls     |linux/sigils                                   > a.sigils

cat a.sigils    |linux/tests                                    > a.tests

# no assort since baremetal SubX doesn't have segments yet

cat a.tests     |linux/dquotes                                  > a.dquotes

cat a.dquotes   |linux/pack                                     > a.pack

cat a.pack      |linux/survey_baremetal   > labels
cat a.pack      |linux/labels_baremetal     labels              > a.survey

cat a.survey    |linux/hex                                      > a.bin

# Create code.img containing a.bin
dd if=/dev/zero of=code.img count=20160  # 512-byte sectors, so 10MB
dd if=a.bin of=code.img conv=notrunc

if [ `stat --printf="%s" a.bin` -ge 258048 ]  # 8 tracks * 63 sectors per track * 512 bytes per sector (keep this sync'd with boot.subx)
then
  echo "a.bin won't all be loaded on boot"
  exit 1
fi
