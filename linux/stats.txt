## Lines in source files
                     Initial   -whitespace/comments/tests
factorial.subx         120       44
crenshaw2-1.subx       561      180
crenshaw2-1b.subx      757      186
hex.subx              1442      149
survey_elf.subx       4733      905
pack.subx             5881      840
dquotes.subx          1925      383
assort.subx            905      183
tests.subx             284      137
sigils.subx           4641      896
calls.subx            1785      448
braces.subx            360      121
mu.subx              36692    12858

## Total source lines needed including libraries
                     Initial   -whitespace/comments/tests/dead code
factorial.subx        8436     1700
crenshaw2-1.subx      8644     1925
crenshaw2-1b.subx     8736     1931
hex.subx              9065     1908
survey_elf.subx      10217     3248
pack.subx            10589     2727
dquotes.subx          9262     2468
assort.subx           8686     2425
tests.subx            8519     2214
sigils.subx          10578     3043
calls.subx            9242     2388
braces.subx           8545     2111
mu.subx              35438    15820

## executable size in KB
                     Initial   -tests/dead code
crenshaw2-1            41        4.3
crenshaw2-1b           42        5.2
factorial              42        5.2
hex                    45        5.0
survey_elf             51        9.6
pack                   54        7.6
dquotes                46        6.5
assort                 42        6.4
tests                  41        5.8
sigils                 54        9.1
calls                  47        7.1
braces                 42        5.9
mu                    563      131.0

## history of mu.subx
                                                        date    commit  mu.subx   -tests/cmts  binary (KB excl. dead code)
parsing function headers                           2019 Oct 30  5725      621         277         6.9
function calls                                          Nov 10  5739     1202         346         7.2
code-generating primitive instructions                  Nov 17  5750     1923         363         7.3
arguments                                               Nov 30  5785     4038        1330        13
return values                                      2020 Jan 1   5878     5432        1457        15
compound types: `addr` and `array`                      Jan 20  5911     6023        1697        16
local variables and their reclamation                   Jan 27  5934     6340        1900        18
register locals and shadowing                           Jan 27  5940     6498        1940        18
blocks                                                  Jan 29  5948     7455        2534        22
break/continue instructions                             Jan 30  5964     7871        2558        22
cleaning up locals in the presence of early exits       Feb 9   6000     8554        2918        26
pointer dereferencing                                   Feb 20  6040     9053        3075        27
arrays, and indexing them with a non-literal
user-defined types, and getting fields in them          Mar 11  6135    11592        4165        33
-- cleanup: switch to handles everywhere                May 22  6382    15014        5064        39
first round of prototyping and static checks            Jun 21  6572    18722        6044        49
more checks                                             Jul 25  6674    22067        7153        61
more checks                                             Aug 22  6723    23934        7851        69
floating point                                          Sep 30  6917    26067        8595        74
more checks                                             Nov 5   7187    34150       11953       119
== mostly done                                          Nov 20  7267    36692       12858       131

vim:nowrap:tw&
