== code
foo:
  # . prologue
  55/push-ebp
  89/<- %ebp 4/r32/esp
  {
$foo:0x00000001:loop:
    {
$foo:loop:
      {
        0f 85/jump-if-!= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 85/jump-if-!= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 84/jump-if-= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 84/jump-if-= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 8f/jump-if-> break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 8f/jump-if-> break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 8c/jump-if-< break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 8c/jump-if-< break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 8d/jump-if->= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 8d/jump-if->= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 8e/jump-if-<= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 8e/jump-if-<= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 83/jump-if-addr>= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 83/jump-if-addr>= break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 81/jump-if-not-overflow break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 81/jump-if-not-overflow break/disp32
        e9/jump $foo:break/disp32
      }
      {
        0f 85/jump-if-!= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 85/jump-if-!= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 84/jump-if-= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 84/jump-if-= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 8f/jump-if-> break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 8f/jump-if-> break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 8c/jump-if-< break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 8c/jump-if-< break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 8d/jump-if->= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 8d/jump-if->= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 8e/jump-if-<= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 8e/jump-if-<= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 83/jump-if-addr>= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 83/jump-if-addr>= break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 82/jump-if-addr< break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 82/jump-if-addr< break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 81/jump-if-not-overflow break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 81/jump-if-not-overflow break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 80/jump-if-overflow break/disp32
        e9/jump $foo:loop/disp32
      }
      {
        0f 80/jump-if-overflow break/disp32
        e9/jump $foo:loop/disp32
      }
    }
$foo:break:
  }
$foo:0x00000001:break:
  # . epilogue
  89/<- %esp 5/r32/ebp
  5d/pop-to-ebp
  c3/return
