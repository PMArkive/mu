#!/bin/sh
# Translate SubX files to a bootable disk image.
#
# This script uses emulation, so it does not require x86 or Linux. However it
# is slow.

set -e
set -v

cat $*            |linux/bootstrap/bootstrap run linux/braces             > a.braces

cat a.braces      |linux/bootstrap/bootstrap run linux/calls              > a.calls

cat a.calls       |linux/bootstrap/bootstrap run linux/sigils             > a.sigils

cat a.sigils      |linux/bootstrap/bootstrap run linux/tests              > a.tests

# no assort since baremetal SubX doesn't have segments yet

cat a.tests       |linux/bootstrap/bootstrap run linux/dquotes            > a.dquotes

cat a.dquotes     |linux/bootstrap/bootstrap run linux/pack               > a.pack

cat a.pack        |linux/bootstrap/bootstrap run linux/survey_baremetal   > a.survey

cat a.survey      |linux/bootstrap/bootstrap run linux/hex                > a.bin

# Create code.img containing a.bin
dd if=/dev/zero of=code.img count=20160  # 512-byte sectors, so 10MB
dd if=a.bin of=code.img conv=notrunc

if [ `stat --printf="%s" a.bin` -ge 193536 ]  # 6 tracks * 63 sectors per track * 512 bytes per sector (keep this sync'd with boot.subx)
then
  echo "a.bin won't all be loaded on boot"
  exit 1
fi
